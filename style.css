body {
  background-color: #ECDFCC; /* 전체적으로 배경색 추가 */
  font-family: Arial, sans-serif; /* 기본 폰트 추가 */
}

/* Reset.css로 초기화를 했기 때문에 기본적인 margin값이나 padding값들이 다 0이라서 중간중간 작업하면서 설정 */

header {
  width: 100%; /* 가로너비 화면에 꽉 차게 100%로 지정 */
  height: 10vh; /* 현재 보는 화면창 크기의 10분의 1 크기로 고정. 추후 반응형 웹페이지를 위해 연습겸 이런식으로 위치크기 사용 */
  display: flex; /* 가운데로 고정을 위한 3종세트 */
  justify-content: center;
  align-items: center;
  background-color: #181C14; 
  z-index: 10; /* 왜 넣었지..? 테스트 하다가 안지운듯 합니다 */
}

aside {
  display: inline-block; /* 밑에 aside > a 부분에 들어갔어야했는데 잘 몰라서 넣었다가 못 지운 흔적 */
  position: fixed; /* fixed 속성은 내가 어디를 보던 그 위치에 고정시킬 수 있는 속성. 이와 같은 예시로 보통 사이트 오른쪽 하단에 문의하기 버튼 동그랗게 있는거랑 같은 속성 */
  top: 15%; /* top, left는 내부 내용에 따라 크기가 달라져서 보면서 화면 중앙에 위치 */
  left: 10px; 
  width: 20vw; /* aside 너비는 내가 현재 켜진 창 기준으로 20%의 width 값을 가지게 함 */
  background-color: #3C3D37; 
  z-index: 10; /* 이거도 테스트 해보다가 잘 안되어서 지웠는데 미처 다 못 지운 잔해 */
}

aside p {
  margin-top: 10px; 
  margin-bottom: 20px;
  color: #fff;
  font-weight: 600; /* 글자 굵기 지정 속성값 100부터 900까지 있음. 보통 100단위로 끊어서 많이 사용. default값은 400(normal), bold는 700 */
  display: flex; /* 중앙정렬 3종 세트 */
  justify-content: center;
  align-items: center;
}

aside > a {
  display: inline-block; /* a태그는 inline 속성이라 높이 조절을 해줄 수 없으니 간격 조정을 위해 inline-block으로 변경 */
  font-size: 14px;
  color: #fff;
  margin: 20px 10px; /* 상하 20px, 좌우 10px */
  flex-direction:column;
  justify-content:center;
  align-items:center;
}

section {
  position: absolute; /* absolute로 직접 section이 어디에 위치할 지 위치고정 */
  top: 12vh; /* 여기도 반응형 웹을 위해 vh를 이용하여 현재 창 크기에 따라 위에서부터 12%정도 되는 지점부터 시작되게 배치 */
  left: 23vw; /* 왼쪽에서부터 23% 정도 되는 위치 */
  width: 75%; /* 너비는 왼쪽에서부터 23%지점에서부터 시작되어서 75%정도 */
  border: 2px solid #697565;
  border-radius: 5px; /* 테두리 둥근 정도 5px */
}

article {
  margin: 15px; /* 각 본문 내용마다 margin값 조정 */
}

article > p {
  font-size: 16px; 
  font-weight: 500; 
  margin-bottom: 5px; 
  line-height: 20px; /* 줄 간격 조정. */
}

h1 {
  font-size: 32px;
  color: #fff;
  font-weight: 700;
}

h3 {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 10px;
}

hr {
  width: 95%; /* 화면에 구분선 하나 그어주는 태그인데 기본값이 100% 라서 95%로 약간 줄여가지고 좌우로 공백이 생기게 조정 */
}

img {
  display: block; /* 이미지 태그도 기본 속성값은 inline이므로 block으로 변경 */
}

td {
  border: 1px solid black; /* 테이블 태그 테두리 부분 표시 */
  padding: 100px;
}

td:hover {
  background-color: #3C3D37;
}

.divTable {
  display: flex; /* 각 값마다 위치 조정을 위해 flex로 변경 */
  justify-content:space-around; /* 일정한 간격을 주고 배치해주는 속성값 */
}

/* input태그 중에서 checkbox라는 타입을 가진 태그를 칭하는 표현 */
input[type="checkbox"] + p{ /* checkbox 그리고 바로 뒤에 p 태그를 지정 */
  display: inline-block; /* p태그라 위치가 이상하길래 대충 display로 가로로 배치되게 끼워맞출라고 한겁니다 */
}

input[type="checkbox"]:checked + p{ /* 체크박스에 체크가 된다면 이라는 태그 :checked */
  display: inline-block;
  font-size: 30px;
}

input[type="search"].searchEnabled:enabled { /* 인풋박스에 입력 가능한 상태 */
  background-color: #00ffff;
}

input[type="search"].searchDisabled:disabled { /* 인풋박스에 입력이 불가능한 상태 */
  background-color: #599794;
}

div.none {
  display: none;
}

div.block {
  display: block;
}

div.inline {
  display: inline;
}

/* 제일 바깥쪽 여백은 margin, 테두리 역할을 하는 border, 제일 안쪽 여백은 padding */
div.margin.padding.border {
  width: 50px;
  height: 50px;
  margin: 20px;           
  border: 5px solid black;
  padding: 10px;       
  background-color: #f0f0f0;
}

.reactIcon {
  margin-top: 30px;
  width: 20%;
  height: 20%;
  animation: reacticon 10000ms infinite linear; /* 순서대로 설명을 하자면 reacticon이란 이름을 가진 keyframes을, 10000ms(10초동안) infinite(무한으로) linear(일정 속도를 가지면서 실행) */
}

@keyframes reacticon { /* 위에서 reacticon이란 애니메이션 이름을 지정해줬으니 */
  0% { 
    transform: rotate(0deg); /* 시작할땐 각도가 0도에서 */
  }
  100% { 
    transform: rotate(360deg); /* 총 10초동안 360도 사진이 돌아가게 지정  */
  }
}

.reactIcon:hover { /* 마우스 커서를 사진에 올리게 된다면 */
  animation: reacticon2 100ms infinite linear; /* reacticon2 애니메이션을, 0.1초동안, 무한으로, 일정한 속도를 가지고 */
}

@keyframes reacticon2 {
  0% {
    transform: rotate(0deg); /* 시작은 0도에서 */
  }
  100% {
    transform: rotate(360deg); /* 0.1초만에 360도 돌아가는 애니메이션 */
  }
}